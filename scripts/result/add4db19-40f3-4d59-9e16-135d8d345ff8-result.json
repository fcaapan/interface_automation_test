{"name": "test03_register", "status": "broken", "statusDetails": {"message": "TypeError: unhashable type: 'MarkDecorator'", "trace": "self = <allure_pytest.listener.AllureListener object at 0x03E80388>, item = <Function test03_register>\n\n    @pytest.hookimpl(hookwrapper=True)\n    def pytest_runtest_teardown(self, item):\n        yield\n        uuid = self._cache.get(item.nodeid)\n        test_result = self.allure_logger.get_test(uuid)\n        test_result.historyId = get_history_id(\n            test_result.fullName,\n            test_result.parameters,\n            original_values=self.__get_pytest_params(item)\n        )\n>       test_result.labels.extend([Label(name=name, value=value) for name, value in allure_labels(item)])\n\nD:\\python\\lib\\site-packages\\allure_pytest\\listener.py:142: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nitem = <Function test03_register>\n\n    def allure_labels(item):\n        unique_labels = dict()\n        labels = set()\n        for mark in item.iter_markers(name=ALLURE_LABEL_MARK):\n            label_type = mark.kwargs[\"label_type\"]\n            if label_type in ALLURE_UNIQUE_LABELS:\n                if label_type not in unique_labels.keys():\n                    unique_labels[label_type] = mark.args[0]\n            else:\n                for arg in mark.args:\n                    labels.add((label_type, arg))\n        for k, v in unique_labels.items():\n>           labels.add((k, v))\nE           TypeError: unhashable type: 'MarkDecorator'\n\nD:\\python\\lib\\site-packages\\allure_pytest\\utils.py:69: TypeError"}, "start": 1692673198723, "stop": 1692673198724, "uuid": "e386fdfc-3aa2-4c07-825e-2282f85a2fb4", "historyId": "574b98796ac2c7644beb09d52192303f", "testCaseId": "574b98796ac2c7644beb09d52192303f", "fullName": "scripts.testRegLogin.TestRegLogin#test03_register"}